@using ProductCatalog.Application.Common.Interfaces
@inherits ErrorBoundary
@inject ILogger<CustomErrorBoundary> Logger
@inject ICorrelationIdAccessor CorrelationIdAccessor

@if (CurrentException is null)
{
    @ChildContent
}
else
{
    <div class="container mt-5">
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">エラーが発生しました</h4>
            <p>申し訳ございません。予期しないエラーが発生しました。</p>
            <hr>
            <p class="mb-0">
                <small>CorrelationID: @CorrelationIdAccessor.CorrelationId</small>
            </p>
            <p class="mb-0">
                <small>時刻: @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")</small>
            </p>
            @if (ShowDetails)
            {
                <hr>
                <h5>エラー詳細</h5>
                <pre class="text-danger">@CurrentException.ToString()</pre>
            }
            <button class="btn btn-primary mt-3" @onclick="Recover">再試行</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool ShowDetails { get; set; } = false;

    protected override Task OnErrorAsync(Exception exception)
    {
        var correlationId = CorrelationIdAccessor.CorrelationId;

        Logger.LogError(exception,
            "Blazor ErrorBoundary でエラーをキャッチしました。 [CorrelationId: {CorrelationId}]",
            correlationId);

        return base.OnErrorAsync(exception);
    }
}
